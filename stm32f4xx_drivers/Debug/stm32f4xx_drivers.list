
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000460  08000194  08000194  00001194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080005f4  080005fc  000015fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080005f4  080005f4  000015fc  2**0
                  CONTENTS
  4 .ARM          00000000  080005f4  080005f4  000015fc  2**0
                  CONTENTS
  5 .preinit_array 00000000  080005f4  080005fc  000015fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080005f4  080005f4  000015f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080005f8  080005f8  000015f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  000015fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080005fc  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080005fc  0000201c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000015fc  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000843  00000000  00000000  0000162c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000274  00000000  00000000  00001e6f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000a8  00000000  00000000  000020e8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000072  00000000  00000000  00002190  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00001301  00000000  00000000  00002202  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000cbb  00000000  00000000  00003503  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00004f4f  00000000  00000000  000041be  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0000910d  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000001d4  00000000  00000000  00009150  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000066  00000000  00000000  00009324  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	@ (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	@ (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	080005dc 	.word	0x080005dc

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	@ (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	@ (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	@ (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	080005dc 	.word	0x080005dc

080001d4 <main>:
{
    for(uint32_t i = 0; i < 500000; i++);
}

int main()
{
 80001d4:	b580      	push	{r7, lr}
 80001d6:	b086      	sub	sp, #24
 80001d8:	af00      	add	r7, sp, #0
    GPIO_Handle_t GpioLed, GpioBtn;

    GpioLed.pGPIOx = GPIOA; // CHANGE WITH THE RIGHT PORT
 80001da:	4b16      	ldr	r3, [pc, #88]	@ (8000234 <main+0x60>)
 80001dc:	60fb      	str	r3, [r7, #12]
    GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_1; //CHANGE WITH THE RIGHT PIN
 80001de:	2301      	movs	r3, #1
 80001e0:	743b      	strb	r3, [r7, #16]
    GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 80001e2:	2301      	movs	r3, #1
 80001e4:	747b      	strb	r3, [r7, #17]
    GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 80001e6:	2302      	movs	r3, #2
 80001e8:	74bb      	strb	r3, [r7, #18]
    GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 80001ea:	2300      	movs	r3, #0
 80001ec:	753b      	strb	r3, [r7, #20]
    GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_NO_PUPD;
 80001ee:	2300      	movs	r3, #0
 80001f0:	74fb      	strb	r3, [r7, #19]

    GPIO_PeriClockControl(GPIOA, ENABLE);
 80001f2:	2101      	movs	r1, #1
 80001f4:	480f      	ldr	r0, [pc, #60]	@ (8000234 <main+0x60>)
 80001f6:	f000 f84b 	bl	8000290 <GPIO_PeriClockControl>
    GPIO_Init(&GpioLed);
 80001fa:	f107 030c 	add.w	r3, r7, #12
 80001fe:	4618      	mov	r0, r3
 8000200:	f000 f8e6 	bl	80003d0 <GPIO_Init>

    GpioBtn.pGPIOx = GPIOD; // CHANGE WITH THE RIGHT PORT
 8000204:	4b0c      	ldr	r3, [pc, #48]	@ (8000238 <main+0x64>)
 8000206:	603b      	str	r3, [r7, #0]
    GpioBtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_3; //CHANGE WITH THE RIGHT PIN
 8000208:	2303      	movs	r3, #3
 800020a:	713b      	strb	r3, [r7, #4]
    GpioBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IN;
 800020c:	2300      	movs	r3, #0
 800020e:	717b      	strb	r3, [r7, #5]
    GpioBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000210:	2302      	movs	r3, #2
 8000212:	71bb      	strb	r3, [r7, #6]
    GpioBtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_PU;
 8000214:	2301      	movs	r3, #1
 8000216:	71fb      	strb	r3, [r7, #7]

    GPIO_PeriClockControl(GPIOD, ENABLE);
 8000218:	2101      	movs	r1, #1
 800021a:	4807      	ldr	r0, [pc, #28]	@ (8000238 <main+0x64>)
 800021c:	f000 f838 	bl	8000290 <GPIO_PeriClockControl>
    GPIO_Init(&GpioBtn);
 8000220:	463b      	mov	r3, r7
 8000222:	4618      	mov	r0, r3
 8000224:	f000 f8d4 	bl	80003d0 <GPIO_Init>
        }
    }*/

    while(1)
    {
            GPIO_ToggleOutputPin(GPIOA, GPIO_PIN_NO_1); //CHANGE WITH THE RIGHT PIN AND PORT
 8000228:	2101      	movs	r1, #1
 800022a:	4802      	ldr	r0, [pc, #8]	@ (8000234 <main+0x60>)
 800022c:	f000 f99d 	bl	800056a <GPIO_ToggleOutputPin>
 8000230:	e7fa      	b.n	8000228 <main+0x54>
 8000232:	bf00      	nop
 8000234:	40020000 	.word	0x40020000
 8000238:	40020c00 	.word	0x40020c00

0800023c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800023c:	480d      	ldr	r0, [pc, #52]	@ (8000274 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800023e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000240:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000244:	480c      	ldr	r0, [pc, #48]	@ (8000278 <LoopForever+0x6>)
  ldr r1, =_edata
 8000246:	490d      	ldr	r1, [pc, #52]	@ (800027c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000248:	4a0d      	ldr	r2, [pc, #52]	@ (8000280 <LoopForever+0xe>)
  movs r3, #0
 800024a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800024c:	e002      	b.n	8000254 <LoopCopyDataInit>

0800024e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800024e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000250:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000252:	3304      	adds	r3, #4

08000254 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000254:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000256:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000258:	d3f9      	bcc.n	800024e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800025a:	4a0a      	ldr	r2, [pc, #40]	@ (8000284 <LoopForever+0x12>)
  ldr r4, =_ebss
 800025c:	4c0a      	ldr	r4, [pc, #40]	@ (8000288 <LoopForever+0x16>)
  movs r3, #0
 800025e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000260:	e001      	b.n	8000266 <LoopFillZerobss>

08000262 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000262:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000264:	3204      	adds	r2, #4

08000266 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000266:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000268:	d3fb      	bcc.n	8000262 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800026a:	f000 f993 	bl	8000594 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800026e:	f7ff ffb1 	bl	80001d4 <main>

08000272 <LoopForever>:

LoopForever:
  b LoopForever
 8000272:	e7fe      	b.n	8000272 <LoopForever>
  ldr   r0, =_estack
 8000274:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8000278:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800027c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000280:	080005fc 	.word	0x080005fc
  ldr r2, =_sbss
 8000284:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000288:	2000001c 	.word	0x2000001c

0800028c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800028c:	e7fe      	b.n	800028c <ADC_IRQHandler>
	...

08000290 <GPIO_PeriClockControl>:
 *
 * @Note        - None
 *
 *****************************************************************/
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 8000290:	b480      	push	{r7}
 8000292:	b083      	sub	sp, #12
 8000294:	af00      	add	r7, sp, #0
 8000296:	6078      	str	r0, [r7, #4]
 8000298:	460b      	mov	r3, r1
 800029a:	70fb      	strb	r3, [r7, #3]
    if(EnorDi == ENABLE)
 800029c:	78fb      	ldrb	r3, [r7, #3]
 800029e:	2b01      	cmp	r3, #1
 80002a0:	d141      	bne.n	8000326 <GPIO_PeriClockControl+0x96>
    {
        if(pGPIOx == GPIOA)
 80002a2:	687b      	ldr	r3, [r7, #4]
 80002a4:	4a43      	ldr	r2, [pc, #268]	@ (80003b4 <GPIO_PeriClockControl+0x124>)
 80002a6:	4293      	cmp	r3, r2
 80002a8:	d106      	bne.n	80002b8 <GPIO_PeriClockControl+0x28>
        {
        	GPIOA_CLKEN();
 80002aa:	4b43      	ldr	r3, [pc, #268]	@ (80003b8 <GPIO_PeriClockControl+0x128>)
 80002ac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002ae:	4a42      	ldr	r2, [pc, #264]	@ (80003b8 <GPIO_PeriClockControl+0x128>)
 80002b0:	f043 0301 	orr.w	r3, r3, #1
 80002b4:	6313      	str	r3, [r2, #48]	@ 0x30
        else if(pGPIOx == GPIOH)
        {
        	GPIOH_CLKDIS();
        }        
    }
}
 80002b6:	e077      	b.n	80003a8 <GPIO_PeriClockControl+0x118>
        else if(pGPIOx == GPIOB)
 80002b8:	687b      	ldr	r3, [r7, #4]
 80002ba:	4a40      	ldr	r2, [pc, #256]	@ (80003bc <GPIO_PeriClockControl+0x12c>)
 80002bc:	4293      	cmp	r3, r2
 80002be:	d106      	bne.n	80002ce <GPIO_PeriClockControl+0x3e>
        	GPIOB_CLKEN();
 80002c0:	4b3d      	ldr	r3, [pc, #244]	@ (80003b8 <GPIO_PeriClockControl+0x128>)
 80002c2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002c4:	4a3c      	ldr	r2, [pc, #240]	@ (80003b8 <GPIO_PeriClockControl+0x128>)
 80002c6:	f043 0302 	orr.w	r3, r3, #2
 80002ca:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80002cc:	e06c      	b.n	80003a8 <GPIO_PeriClockControl+0x118>
        else if(pGPIOx == GPIOC)
 80002ce:	687b      	ldr	r3, [r7, #4]
 80002d0:	4a3b      	ldr	r2, [pc, #236]	@ (80003c0 <GPIO_PeriClockControl+0x130>)
 80002d2:	4293      	cmp	r3, r2
 80002d4:	d106      	bne.n	80002e4 <GPIO_PeriClockControl+0x54>
        	GPIOC_CLKEN();
 80002d6:	4b38      	ldr	r3, [pc, #224]	@ (80003b8 <GPIO_PeriClockControl+0x128>)
 80002d8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002da:	4a37      	ldr	r2, [pc, #220]	@ (80003b8 <GPIO_PeriClockControl+0x128>)
 80002dc:	f043 0304 	orr.w	r3, r3, #4
 80002e0:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80002e2:	e061      	b.n	80003a8 <GPIO_PeriClockControl+0x118>
        else if(pGPIOx == GPIOD)
 80002e4:	687b      	ldr	r3, [r7, #4]
 80002e6:	4a37      	ldr	r2, [pc, #220]	@ (80003c4 <GPIO_PeriClockControl+0x134>)
 80002e8:	4293      	cmp	r3, r2
 80002ea:	d106      	bne.n	80002fa <GPIO_PeriClockControl+0x6a>
        	GPIOD_CLKEN();
 80002ec:	4b32      	ldr	r3, [pc, #200]	@ (80003b8 <GPIO_PeriClockControl+0x128>)
 80002ee:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002f0:	4a31      	ldr	r2, [pc, #196]	@ (80003b8 <GPIO_PeriClockControl+0x128>)
 80002f2:	f043 0308 	orr.w	r3, r3, #8
 80002f6:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80002f8:	e056      	b.n	80003a8 <GPIO_PeriClockControl+0x118>
        else if(pGPIOx == GPIOE)
 80002fa:	687b      	ldr	r3, [r7, #4]
 80002fc:	4a32      	ldr	r2, [pc, #200]	@ (80003c8 <GPIO_PeriClockControl+0x138>)
 80002fe:	4293      	cmp	r3, r2
 8000300:	d106      	bne.n	8000310 <GPIO_PeriClockControl+0x80>
        	GPIOE_CLKEN();
 8000302:	4b2d      	ldr	r3, [pc, #180]	@ (80003b8 <GPIO_PeriClockControl+0x128>)
 8000304:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000306:	4a2c      	ldr	r2, [pc, #176]	@ (80003b8 <GPIO_PeriClockControl+0x128>)
 8000308:	f043 0310 	orr.w	r3, r3, #16
 800030c:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800030e:	e04b      	b.n	80003a8 <GPIO_PeriClockControl+0x118>
        else if(pGPIOx == GPIOH)
 8000310:	687b      	ldr	r3, [r7, #4]
 8000312:	4a2e      	ldr	r2, [pc, #184]	@ (80003cc <GPIO_PeriClockControl+0x13c>)
 8000314:	4293      	cmp	r3, r2
 8000316:	d147      	bne.n	80003a8 <GPIO_PeriClockControl+0x118>
        	GPIOH_CLKEN();
 8000318:	4b27      	ldr	r3, [pc, #156]	@ (80003b8 <GPIO_PeriClockControl+0x128>)
 800031a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800031c:	4a26      	ldr	r2, [pc, #152]	@ (80003b8 <GPIO_PeriClockControl+0x128>)
 800031e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000322:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000324:	e040      	b.n	80003a8 <GPIO_PeriClockControl+0x118>
        if(pGPIOx == GPIOA)
 8000326:	687b      	ldr	r3, [r7, #4]
 8000328:	4a22      	ldr	r2, [pc, #136]	@ (80003b4 <GPIO_PeriClockControl+0x124>)
 800032a:	4293      	cmp	r3, r2
 800032c:	d106      	bne.n	800033c <GPIO_PeriClockControl+0xac>
        	GPIOA_CLKDIS();
 800032e:	4b22      	ldr	r3, [pc, #136]	@ (80003b8 <GPIO_PeriClockControl+0x128>)
 8000330:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000332:	4a21      	ldr	r2, [pc, #132]	@ (80003b8 <GPIO_PeriClockControl+0x128>)
 8000334:	f023 0301 	bic.w	r3, r3, #1
 8000338:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800033a:	e035      	b.n	80003a8 <GPIO_PeriClockControl+0x118>
        else if(pGPIOx == GPIOB)
 800033c:	687b      	ldr	r3, [r7, #4]
 800033e:	4a1f      	ldr	r2, [pc, #124]	@ (80003bc <GPIO_PeriClockControl+0x12c>)
 8000340:	4293      	cmp	r3, r2
 8000342:	d106      	bne.n	8000352 <GPIO_PeriClockControl+0xc2>
        	GPIOB_CLKDIS();
 8000344:	4b1c      	ldr	r3, [pc, #112]	@ (80003b8 <GPIO_PeriClockControl+0x128>)
 8000346:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000348:	4a1b      	ldr	r2, [pc, #108]	@ (80003b8 <GPIO_PeriClockControl+0x128>)
 800034a:	f023 0302 	bic.w	r3, r3, #2
 800034e:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000350:	e02a      	b.n	80003a8 <GPIO_PeriClockControl+0x118>
        else if(pGPIOx == GPIOC)
 8000352:	687b      	ldr	r3, [r7, #4]
 8000354:	4a1a      	ldr	r2, [pc, #104]	@ (80003c0 <GPIO_PeriClockControl+0x130>)
 8000356:	4293      	cmp	r3, r2
 8000358:	d106      	bne.n	8000368 <GPIO_PeriClockControl+0xd8>
        	GPIOC_CLKDIS();
 800035a:	4b17      	ldr	r3, [pc, #92]	@ (80003b8 <GPIO_PeriClockControl+0x128>)
 800035c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800035e:	4a16      	ldr	r2, [pc, #88]	@ (80003b8 <GPIO_PeriClockControl+0x128>)
 8000360:	f023 0304 	bic.w	r3, r3, #4
 8000364:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000366:	e01f      	b.n	80003a8 <GPIO_PeriClockControl+0x118>
        else if(pGPIOx == GPIOD)
 8000368:	687b      	ldr	r3, [r7, #4]
 800036a:	4a16      	ldr	r2, [pc, #88]	@ (80003c4 <GPIO_PeriClockControl+0x134>)
 800036c:	4293      	cmp	r3, r2
 800036e:	d106      	bne.n	800037e <GPIO_PeriClockControl+0xee>
        	GPIOD_CLKDIS();
 8000370:	4b11      	ldr	r3, [pc, #68]	@ (80003b8 <GPIO_PeriClockControl+0x128>)
 8000372:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000374:	4a10      	ldr	r2, [pc, #64]	@ (80003b8 <GPIO_PeriClockControl+0x128>)
 8000376:	f023 0308 	bic.w	r3, r3, #8
 800037a:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800037c:	e014      	b.n	80003a8 <GPIO_PeriClockControl+0x118>
        else if(pGPIOx == GPIOE)
 800037e:	687b      	ldr	r3, [r7, #4]
 8000380:	4a11      	ldr	r2, [pc, #68]	@ (80003c8 <GPIO_PeriClockControl+0x138>)
 8000382:	4293      	cmp	r3, r2
 8000384:	d106      	bne.n	8000394 <GPIO_PeriClockControl+0x104>
        	GPIOE_CLKDIS();
 8000386:	4b0c      	ldr	r3, [pc, #48]	@ (80003b8 <GPIO_PeriClockControl+0x128>)
 8000388:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800038a:	4a0b      	ldr	r2, [pc, #44]	@ (80003b8 <GPIO_PeriClockControl+0x128>)
 800038c:	f023 0310 	bic.w	r3, r3, #16
 8000390:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000392:	e009      	b.n	80003a8 <GPIO_PeriClockControl+0x118>
        else if(pGPIOx == GPIOH)
 8000394:	687b      	ldr	r3, [r7, #4]
 8000396:	4a0d      	ldr	r2, [pc, #52]	@ (80003cc <GPIO_PeriClockControl+0x13c>)
 8000398:	4293      	cmp	r3, r2
 800039a:	d105      	bne.n	80003a8 <GPIO_PeriClockControl+0x118>
        	GPIOH_CLKDIS();
 800039c:	4b06      	ldr	r3, [pc, #24]	@ (80003b8 <GPIO_PeriClockControl+0x128>)
 800039e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003a0:	4a05      	ldr	r2, [pc, #20]	@ (80003b8 <GPIO_PeriClockControl+0x128>)
 80003a2:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80003a6:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003a8:	bf00      	nop
 80003aa:	370c      	adds	r7, #12
 80003ac:	46bd      	mov	sp, r7
 80003ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003b2:	4770      	bx	lr
 80003b4:	40020000 	.word	0x40020000
 80003b8:	40023800 	.word	0x40023800
 80003bc:	40020400 	.word	0x40020400
 80003c0:	40020800 	.word	0x40020800
 80003c4:	40020c00 	.word	0x40020c00
 80003c8:	40021000 	.word	0x40021000
 80003cc:	40021c00 	.word	0x40021c00

080003d0 <GPIO_Init>:
 *
 * @Note        - None
 *
 *****************************************************************/
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 80003d0:	b480      	push	{r7}
 80003d2:	b085      	sub	sp, #20
 80003d4:	af00      	add	r7, sp, #0
 80003d6:	6078      	str	r0, [r7, #4]
    uint32_t temp = 0; //temp register
 80003d8:	2300      	movs	r3, #0
 80003da:	60fb      	str	r3, [r7, #12]
    //1.configure mode of gpio pin
    if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode<=GPIO_MODE_ANALOG) 
 80003dc:	687b      	ldr	r3, [r7, #4]
 80003de:	795b      	ldrb	r3, [r3, #5]
 80003e0:	2b03      	cmp	r3, #3
 80003e2:	d820      	bhi.n	8000426 <GPIO_Init+0x56>
    {
        //no interrupt mode
        temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << 2*(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003e4:	687b      	ldr	r3, [r7, #4]
 80003e6:	795b      	ldrb	r3, [r3, #5]
 80003e8:	461a      	mov	r2, r3
 80003ea:	687b      	ldr	r3, [r7, #4]
 80003ec:	791b      	ldrb	r3, [r3, #4]
 80003ee:	005b      	lsls	r3, r3, #1
 80003f0:	fa02 f303 	lsl.w	r3, r2, r3
 80003f4:	60fb      	str	r3, [r7, #12]
        pGPIOHandle->pGPIOx->MODER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003f6:	687b      	ldr	r3, [r7, #4]
 80003f8:	681b      	ldr	r3, [r3, #0]
 80003fa:	681a      	ldr	r2, [r3, #0]
 80003fc:	687b      	ldr	r3, [r7, #4]
 80003fe:	791b      	ldrb	r3, [r3, #4]
 8000400:	4619      	mov	r1, r3
 8000402:	2303      	movs	r3, #3
 8000404:	408b      	lsls	r3, r1
 8000406:	43db      	mvns	r3, r3
 8000408:	4619      	mov	r1, r3
 800040a:	687b      	ldr	r3, [r7, #4]
 800040c:	681b      	ldr	r3, [r3, #0]
 800040e:	400a      	ands	r2, r1
 8000410:	601a      	str	r2, [r3, #0]
        pGPIOHandle->pGPIOx->MODER |= temp;
 8000412:	687b      	ldr	r3, [r7, #4]
 8000414:	681b      	ldr	r3, [r3, #0]
 8000416:	6819      	ldr	r1, [r3, #0]
 8000418:	687b      	ldr	r3, [r7, #4]
 800041a:	681b      	ldr	r3, [r3, #0]
 800041c:	68fa      	ldr	r2, [r7, #12]
 800041e:	430a      	orrs	r2, r1
 8000420:	601a      	str	r2, [r3, #0]
        temp = 0;
 8000422:	2300      	movs	r3, #0
 8000424:	60fb      	str	r3, [r7, #12]
    {
        //interrupt mode(will code later)         
    }

    //2.configure speed of gpio pin
    temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << 2 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000426:	687b      	ldr	r3, [r7, #4]
 8000428:	799b      	ldrb	r3, [r3, #6]
 800042a:	461a      	mov	r2, r3
 800042c:	687b      	ldr	r3, [r7, #4]
 800042e:	791b      	ldrb	r3, [r3, #4]
 8000430:	005b      	lsls	r3, r3, #1
 8000432:	fa02 f303 	lsl.w	r3, r2, r3
 8000436:	60fb      	str	r3, [r7, #12]
    pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000438:	687b      	ldr	r3, [r7, #4]
 800043a:	681b      	ldr	r3, [r3, #0]
 800043c:	689a      	ldr	r2, [r3, #8]
 800043e:	687b      	ldr	r3, [r7, #4]
 8000440:	791b      	ldrb	r3, [r3, #4]
 8000442:	4619      	mov	r1, r3
 8000444:	2303      	movs	r3, #3
 8000446:	408b      	lsls	r3, r1
 8000448:	43db      	mvns	r3, r3
 800044a:	4619      	mov	r1, r3
 800044c:	687b      	ldr	r3, [r7, #4]
 800044e:	681b      	ldr	r3, [r3, #0]
 8000450:	400a      	ands	r2, r1
 8000452:	609a      	str	r2, [r3, #8]
    pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 8000454:	687b      	ldr	r3, [r7, #4]
 8000456:	681b      	ldr	r3, [r3, #0]
 8000458:	6899      	ldr	r1, [r3, #8]
 800045a:	687b      	ldr	r3, [r7, #4]
 800045c:	681b      	ldr	r3, [r3, #0]
 800045e:	68fa      	ldr	r2, [r7, #12]
 8000460:	430a      	orrs	r2, r1
 8000462:	609a      	str	r2, [r3, #8]
    temp = 0;
 8000464:	2300      	movs	r3, #0
 8000466:	60fb      	str	r3, [r7, #12]

    //3.configure pupd of gpio pin
    temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << 2 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000468:	687b      	ldr	r3, [r7, #4]
 800046a:	79db      	ldrb	r3, [r3, #7]
 800046c:	461a      	mov	r2, r3
 800046e:	687b      	ldr	r3, [r7, #4]
 8000470:	791b      	ldrb	r3, [r3, #4]
 8000472:	005b      	lsls	r3, r3, #1
 8000474:	fa02 f303 	lsl.w	r3, r2, r3
 8000478:	60fb      	str	r3, [r7, #12]
    pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800047a:	687b      	ldr	r3, [r7, #4]
 800047c:	681b      	ldr	r3, [r3, #0]
 800047e:	68da      	ldr	r2, [r3, #12]
 8000480:	687b      	ldr	r3, [r7, #4]
 8000482:	791b      	ldrb	r3, [r3, #4]
 8000484:	4619      	mov	r1, r3
 8000486:	2303      	movs	r3, #3
 8000488:	408b      	lsls	r3, r1
 800048a:	43db      	mvns	r3, r3
 800048c:	4619      	mov	r1, r3
 800048e:	687b      	ldr	r3, [r7, #4]
 8000490:	681b      	ldr	r3, [r3, #0]
 8000492:	400a      	ands	r2, r1
 8000494:	60da      	str	r2, [r3, #12]
    pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000496:	687b      	ldr	r3, [r7, #4]
 8000498:	681b      	ldr	r3, [r3, #0]
 800049a:	68d9      	ldr	r1, [r3, #12]
 800049c:	687b      	ldr	r3, [r7, #4]
 800049e:	681b      	ldr	r3, [r3, #0]
 80004a0:	68fa      	ldr	r2, [r7, #12]
 80004a2:	430a      	orrs	r2, r1
 80004a4:	60da      	str	r2, [r3, #12]
    temp = 0;
 80004a6:	2300      	movs	r3, #0
 80004a8:	60fb      	str	r3, [r7, #12]

    //4.configure optype of gpio pin
    temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004aa:	687b      	ldr	r3, [r7, #4]
 80004ac:	7a1b      	ldrb	r3, [r3, #8]
 80004ae:	461a      	mov	r2, r3
 80004b0:	687b      	ldr	r3, [r7, #4]
 80004b2:	791b      	ldrb	r3, [r3, #4]
 80004b4:	fa02 f303 	lsl.w	r3, r2, r3
 80004b8:	60fb      	str	r3, [r7, #12]
    pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004ba:	687b      	ldr	r3, [r7, #4]
 80004bc:	681b      	ldr	r3, [r3, #0]
 80004be:	685a      	ldr	r2, [r3, #4]
 80004c0:	687b      	ldr	r3, [r7, #4]
 80004c2:	791b      	ldrb	r3, [r3, #4]
 80004c4:	4619      	mov	r1, r3
 80004c6:	2301      	movs	r3, #1
 80004c8:	408b      	lsls	r3, r1
 80004ca:	43db      	mvns	r3, r3
 80004cc:	4619      	mov	r1, r3
 80004ce:	687b      	ldr	r3, [r7, #4]
 80004d0:	681b      	ldr	r3, [r3, #0]
 80004d2:	400a      	ands	r2, r1
 80004d4:	605a      	str	r2, [r3, #4]
    pGPIOHandle->pGPIOx->OTYPER |= temp;
 80004d6:	687b      	ldr	r3, [r7, #4]
 80004d8:	681b      	ldr	r3, [r3, #0]
 80004da:	6859      	ldr	r1, [r3, #4]
 80004dc:	687b      	ldr	r3, [r7, #4]
 80004de:	681b      	ldr	r3, [r3, #0]
 80004e0:	68fa      	ldr	r2, [r7, #12]
 80004e2:	430a      	orrs	r2, r1
 80004e4:	605a      	str	r2, [r3, #4]
    temp = 0;
 80004e6:	2300      	movs	r3, #0
 80004e8:	60fb      	str	r3, [r7, #12]

    //5.configure alt. func. mode of gpio pin  
    if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 80004ea:	687b      	ldr	r3, [r7, #4]
 80004ec:	795b      	ldrb	r3, [r3, #5]
 80004ee:	2b02      	cmp	r3, #2
 80004f0:	d135      	bne.n	800055e <GPIO_Init+0x18e>
    {
        //configure the alt. function register
        uint8_t  temp1=0, temp2=0;
 80004f2:	2300      	movs	r3, #0
 80004f4:	72fb      	strb	r3, [r7, #11]
 80004f6:	2300      	movs	r3, #0
 80004f8:	72bb      	strb	r3, [r7, #10]
        temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 80004fa:	687b      	ldr	r3, [r7, #4]
 80004fc:	791b      	ldrb	r3, [r3, #4]
 80004fe:	08db      	lsrs	r3, r3, #3
 8000500:	72fb      	strb	r3, [r7, #11]
        temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 8000502:	687b      	ldr	r3, [r7, #4]
 8000504:	791b      	ldrb	r3, [r3, #4]
 8000506:	f003 0307 	and.w	r3, r3, #7
 800050a:	72fb      	strb	r3, [r7, #11]
        pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0XF << (4 * temp2));        
 800050c:	687b      	ldr	r3, [r7, #4]
 800050e:	681b      	ldr	r3, [r3, #0]
 8000510:	7afa      	ldrb	r2, [r7, #11]
 8000512:	3208      	adds	r2, #8
 8000514:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000518:	7abb      	ldrb	r3, [r7, #10]
 800051a:	009b      	lsls	r3, r3, #2
 800051c:	220f      	movs	r2, #15
 800051e:	fa02 f303 	lsl.w	r3, r2, r3
 8000522:	43db      	mvns	r3, r3
 8000524:	4618      	mov	r0, r3
 8000526:	687b      	ldr	r3, [r7, #4]
 8000528:	681b      	ldr	r3, [r3, #0]
 800052a:	7afa      	ldrb	r2, [r7, #11]
 800052c:	4001      	ands	r1, r0
 800052e:	3208      	adds	r2, #8
 8000530:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
        pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2));
 8000534:	687b      	ldr	r3, [r7, #4]
 8000536:	681b      	ldr	r3, [r3, #0]
 8000538:	7afa      	ldrb	r2, [r7, #11]
 800053a:	3208      	adds	r2, #8
 800053c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000540:	687b      	ldr	r3, [r7, #4]
 8000542:	7a5b      	ldrb	r3, [r3, #9]
 8000544:	461a      	mov	r2, r3
 8000546:	7abb      	ldrb	r3, [r7, #10]
 8000548:	009b      	lsls	r3, r3, #2
 800054a:	fa02 f303 	lsl.w	r3, r2, r3
 800054e:	4618      	mov	r0, r3
 8000550:	687b      	ldr	r3, [r7, #4]
 8000552:	681b      	ldr	r3, [r3, #0]
 8000554:	7afa      	ldrb	r2, [r7, #11]
 8000556:	4301      	orrs	r1, r0
 8000558:	3208      	adds	r2, #8
 800055a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]

    }
}
 800055e:	bf00      	nop
 8000560:	3714      	adds	r7, #20
 8000562:	46bd      	mov	sp, r7
 8000564:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000568:	4770      	bx	lr

0800056a <GPIO_ToggleOutputPin>:
 * @Note        - None
 *
 *****************************************************************/

void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 800056a:	b480      	push	{r7}
 800056c:	b083      	sub	sp, #12
 800056e:	af00      	add	r7, sp, #0
 8000570:	6078      	str	r0, [r7, #4]
 8000572:	460b      	mov	r3, r1
 8000574:	70fb      	strb	r3, [r7, #3]
    pGPIOx->ODR ^= (1<<PinNumber);
 8000576:	687b      	ldr	r3, [r7, #4]
 8000578:	695b      	ldr	r3, [r3, #20]
 800057a:	78fa      	ldrb	r2, [r7, #3]
 800057c:	2101      	movs	r1, #1
 800057e:	fa01 f202 	lsl.w	r2, r1, r2
 8000582:	405a      	eors	r2, r3
 8000584:	687b      	ldr	r3, [r7, #4]
 8000586:	615a      	str	r2, [r3, #20]
}
 8000588:	bf00      	nop
 800058a:	370c      	adds	r7, #12
 800058c:	46bd      	mov	sp, r7
 800058e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000592:	4770      	bx	lr

08000594 <__libc_init_array>:
 8000594:	b570      	push	{r4, r5, r6, lr}
 8000596:	4d0d      	ldr	r5, [pc, #52]	@ (80005cc <__libc_init_array+0x38>)
 8000598:	4c0d      	ldr	r4, [pc, #52]	@ (80005d0 <__libc_init_array+0x3c>)
 800059a:	1b64      	subs	r4, r4, r5
 800059c:	10a4      	asrs	r4, r4, #2
 800059e:	2600      	movs	r6, #0
 80005a0:	42a6      	cmp	r6, r4
 80005a2:	d109      	bne.n	80005b8 <__libc_init_array+0x24>
 80005a4:	4d0b      	ldr	r5, [pc, #44]	@ (80005d4 <__libc_init_array+0x40>)
 80005a6:	4c0c      	ldr	r4, [pc, #48]	@ (80005d8 <__libc_init_array+0x44>)
 80005a8:	f000 f818 	bl	80005dc <_init>
 80005ac:	1b64      	subs	r4, r4, r5
 80005ae:	10a4      	asrs	r4, r4, #2
 80005b0:	2600      	movs	r6, #0
 80005b2:	42a6      	cmp	r6, r4
 80005b4:	d105      	bne.n	80005c2 <__libc_init_array+0x2e>
 80005b6:	bd70      	pop	{r4, r5, r6, pc}
 80005b8:	f855 3b04 	ldr.w	r3, [r5], #4
 80005bc:	4798      	blx	r3
 80005be:	3601      	adds	r6, #1
 80005c0:	e7ee      	b.n	80005a0 <__libc_init_array+0xc>
 80005c2:	f855 3b04 	ldr.w	r3, [r5], #4
 80005c6:	4798      	blx	r3
 80005c8:	3601      	adds	r6, #1
 80005ca:	e7f2      	b.n	80005b2 <__libc_init_array+0x1e>
 80005cc:	080005f4 	.word	0x080005f4
 80005d0:	080005f4 	.word	0x080005f4
 80005d4:	080005f4 	.word	0x080005f4
 80005d8:	080005f8 	.word	0x080005f8

080005dc <_init>:
 80005dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80005de:	bf00      	nop
 80005e0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80005e2:	bc08      	pop	{r3}
 80005e4:	469e      	mov	lr, r3
 80005e6:	4770      	bx	lr

080005e8 <_fini>:
 80005e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80005ea:	bf00      	nop
 80005ec:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80005ee:	bc08      	pop	{r3}
 80005f0:	469e      	mov	lr, r3
 80005f2:	4770      	bx	lr
